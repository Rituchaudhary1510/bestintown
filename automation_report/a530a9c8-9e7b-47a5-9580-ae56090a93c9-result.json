{"name": "test_24_COLD_SANDWICHES", "status": "broken", "statusDetails": {"message": "KeyError: 'COLD_SANDWICHES'", "trace": "self = <test_menuitems.TestMenuItems testMethod=test_24_COLD_SANDWICHES>\n\n    @allure.description(\"To verify COLD SANDWICHES added successfully to cart.\")\n    def test_24_COLD_SANDWICHES(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            time.sleep(2)\n            for m in data[\"COLD_SANDWICHES\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, m[\"size\"],\n                                   m[\"crust\"], m[\"platter\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            time.sleep(3)\n            place_ur_order_from_payment(self.driver, \"Delivery\")\n            order_number = verify_order_details(\n                self.driver, \"Delivery\", \"9:30am\")\n            print(order_number)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_menuitems.py:704: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_menuitems.TestMenuItems testMethod=test_24_COLD_SANDWICHES>\n\n    @allure.description(\"To verify COLD SANDWICHES added successfully to cart.\")\n    def test_24_COLD_SANDWICHES(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            time.sleep(2)\n>           for m in data[\"COLD_SANDWICHES\"]:\nE           KeyError: 'COLD_SANDWICHES'\n\ntest_menuitems.py:686: KeyError"}, "description": "To verify COLD SANDWICHES added successfully to cart.", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "19fbeaed-b823-4f2f-a176-ad43daa08108-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"457618049872d4f9e78ec5c206e2bdc0\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677830796277, "stop": 1677830802679}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "99ebd212-e46b-430c-b362-780e8e76c2c2-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"457618049872d4f9e78ec5c206e2bdc0\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677830807689, "stop": 1677830817942}], "attachments": [{"name": "exception_screen", "source": "335fde75-9997-4930-adc8-1ed6f29e9b37-attachment.png", "type": "image/png"}], "start": 1677830794668, "stop": 1677830823488, "uuid": "5c55adb3-bf45-45c5-811c-dd1c735fd1ab", "historyId": "c40d492454b89933f2608210276d60e5", "testCaseId": "8be9ac7e895bce5f2efedb6ded0919dd", "fullName": "test_suite.TestMenuItems#test_24_COLD_SANDWICHES", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenuItems"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "12700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}