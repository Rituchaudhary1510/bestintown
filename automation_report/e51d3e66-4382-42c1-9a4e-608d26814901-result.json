{"name": "test_07_Hoagies_grinders", "status": "broken", "statusDetails": {"message": "KeyError: 'Additional_topping'", "trace": "self = <test_menuitems.TestMenuItems testMethod=test_07_Hoagies_grinders>\n\n    @allure.description(\"To verify Hoagies_grinders added in cart successfully\")\n    def test_07_Hoagies_grinders(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"Hoagies_grinders\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n                                   \"thin\", m[\"platter\"], m[\"Additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n    \n            Checkout_to_paymentscreen(self.driver)\n            time.sleep(3)\n            place_ur_order_from_payment(self.driver, \"Delivery\")\n            print(\"Test case 07 ran successfully\")\n            # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_menuitems.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_menuitems.TestMenuItems testMethod=test_07_Hoagies_grinders>\n\n    @allure.description(\"To verify Hoagies_grinders added in cart successfully\")\n    def test_07_Hoagies_grinders(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"Hoagies_grinders\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n>                                  \"thin\", m[\"platter\"], m[\"Additional_topping\"])\nE                                  KeyError: 'Additional_topping'\n\ntest_menuitems.py:238: KeyError"}, "description": "To verify Hoagies_grinders added in cart successfully", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "6516cbc7-0385-4f2d-966a-b6b48c10e461-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"862aad2d52900698c7330c4d50dc2436\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677774018050, "stop": 1677774028415}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "4cac81c0-87ee-4400-9e1c-e24ff9708499-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"862aad2d52900698c7330c4d50dc2436\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677774030419, "stop": 1677774038738}, {"name": "To perform click operation on the element specified in list:'Hoagies & Grinders'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"862aad2d52900698c7330c4d50dc2436\")>"}, {"name": "productname", "value": "'Hoagies & Grinders'"}], "start": 1677774038739, "stop": 1677774038832}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "58b6179d-7999-42e4-b8ea-12c565bbb62e-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"862aad2d52900698c7330c4d50dc2436\")>"}, {"name": "productname", "value": "'Veggie Hoagie'"}], "start": 1677774041846, "stop": 1677774042377}], "attachments": [{"name": "exception_screen", "source": "8a4c67bb-e53e-49ba-a24e-1f07ec715626-attachment.png", "type": "image/png"}], "start": 1677774016545, "stop": 1677774047197, "uuid": "1523ea41-595e-47e5-ba37-ea846c638bd6", "historyId": "63a9a796ee9c0d1ec8d81af0ff72fe8e", "testCaseId": "73230dfb119d75e6ee1f386c94fbd6e5", "fullName": "test_suite.TestMenuItems#test_07_Hoagies_grinders", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenuItems"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "11036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}