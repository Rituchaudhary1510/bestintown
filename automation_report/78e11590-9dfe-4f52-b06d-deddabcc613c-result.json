{"name": "test_17_Hot_Platter", "status": "broken", "statusDetails": {"message": "KeyError: 'extras'", "trace": "self = <test_menuitems.TestMenuItems testMethod=test_17_Hot_Platter>\n\n    @allure.description(\"To verify HOT PLATTERS added successfully to cart.\")\n    def test_17_Hot_Platter(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            time.sleep(2)\n            for m in data[\"HOT PLATTERS HALAL\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, m[\"size\"],\n                                   m[\"crust\"], m[\"extras\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            time.sleep(3)\n            place_ur_order_from_payment(self.driver, \"Delivery\")\n            order_number = verify_order_details(\n                self.driver, \"Delivery\", \"9:30am\")\n            print(order_number)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_menuitems.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_menuitems.TestMenuItems testMethod=test_17_Hot_Platter>\n\n    @allure.description(\"To verify HOT PLATTERS added successfully to cart.\")\n    def test_17_Hot_Platter(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            time.sleep(2)\n            for m in data[\"HOT PLATTERS HALAL\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, m[\"size\"],\n>                                  m[\"crust\"], m[\"extras\"], m[\"additional_topping\"])\nE                                  KeyError: 'extras'\n\ntest_menuitems.py:495: KeyError"}, "description": "To verify HOT PLATTERS added successfully to cart.", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "a164eeae-cadc-44c1-a583-248cae5e119a-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f5aeb1c1618695258747b7166e2be2d\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677827120632, "stop": 1677827128221}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "a5df5c1c-d9b0-43e2-b6f8-eda975faa045-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f5aeb1c1618695258747b7166e2be2d\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677827133227, "stop": 1677827141620}, {"name": "To perform click operation on the element specified in list:'HOT PLATTERS'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f5aeb1c1618695258747b7166e2be2d\")>"}, {"name": "productname", "value": "'HOT PLATTERS'"}], "start": 1677827143625, "stop": 1677827143771}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "b622b8af-4de6-4e78-8c0e-fb422e81a071-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f5aeb1c1618695258747b7166e2be2d\")>"}, {"name": "productname", "value": "'Best In Town Mix Platter'"}], "start": 1677827146781, "stop": 1677827147305}], "attachments": [{"name": "exception_screen", "source": "1854c1c0-75d7-4ac3-b8cf-7b260ab97250-attachment.png", "type": "image/png"}], "start": 1677827119175, "stop": 1677827151917, "uuid": "154d062f-956d-4b81-befb-22f04c7af7db", "historyId": "8c689755b94196c3728af068195737c2", "testCaseId": "330212d4e50384c12e19677a6be37b1f", "fullName": "test_suite.TestMenuItems#test_17_Hot_Platter", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenuItems"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "13828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}