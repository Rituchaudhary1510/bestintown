{"name": "test_03_gourmet_pizza", "status": "broken", "statusDetails": {"message": "KeyError: 'onion'", "trace": "self = <test_menuitems.TestMenuItems testMethod=test_03_gourmet_pizza>\n\n    @allure.description(\"To verify that GOURMET PIZZA are able to add to cart\")\n    def test_03_gourmet_pizza(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"gourmet_pizza\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n                                   \"thin\", m[\"onion\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n                Checkout_to_paymentscreen(self.driver)\n                time.sleep(2)\n                time.sleep(3)\n                place_ur_order_from_payment(self.driver, \"Delivery\")\n                time.sleep(2)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_menuitems.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_menuitems.TestMenuItems testMethod=test_03_gourmet_pizza>\n\n    @allure.description(\"To verify that GOURMET PIZZA are able to add to cart\")\n    def test_03_gourmet_pizza(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"gourmet_pizza\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n>                                  \"thin\", m[\"onion\"], m[\"additional_topping\"])\nE                                  KeyError: 'onion'\n\ntest_menuitems.py:105: KeyError"}, "description": "To verify that GOURMET PIZZA are able to add to cart", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "7782131c-361d-49cd-9cf1-e646732b45ec-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"011b703e76ed25c197cc4bda46b3dc38\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677415316348, "stop": 1677415321377}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "f252f11b-d2c1-463d-8096-44da446c97a9-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"011b703e76ed25c197cc4bda46b3dc38\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677415323390, "stop": 1677415331379}, {"name": "To perform click operation on the element specified in list:'GOURMET PIZZA'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"011b703e76ed25c197cc4bda46b3dc38\")>"}, {"name": "productname", "value": "'GOURMET PIZZA'"}], "start": 1677415331380, "stop": 1677415331471}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "c866b390-5490-44f0-a593-5829ee722b1c-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"011b703e76ed25c197cc4bda46b3dc38\")>"}, {"name": "productname", "value": "'G4. Hawaiian Pizza'"}], "start": 1677415334484, "stop": 1677415334937}], "attachments": [{"name": "exception_screen", "source": "715e21cb-df9e-4332-b22e-becbc9303d2f-attachment.png", "type": "image/png"}], "start": 1677415314807, "stop": 1677415339583, "uuid": "3b1e98f0-d7ee-4750-8472-a4212b443079", "historyId": "1828ac0d2d86dadf099c74a3f397503f", "testCaseId": "fcac69f9a497d2f52ec87b434395038a", "fullName": "test_suite.TestMenuItems#test_03_gourmet_pizza", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenuItems"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "20516-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}