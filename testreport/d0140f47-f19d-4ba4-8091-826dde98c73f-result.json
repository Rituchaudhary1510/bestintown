{"name": "test_07_signup_insufficient_password_error", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'The email ha...y been taken.' == 'The password...8 characters.'\n  - The password must be at least 8 characters.\n  + The email has already been taken.", "trace": "self = <test_logins.TestBestInTownPizzaLogin testMethod=test_07_signup_insufficient_password_error>\n\n    @allure.description(\"To verify error messages when password less than minimum required value while signup/new account.\")\n    def test_07_signup_insufficient_password_error(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            firstname = names.get_first_name()\n            upercasename = firstname.upper()\n            email = \"{0}@gmail.com\".format(firstname)\n            password = \"{0}@1234\".format(firstname)\n            time.sleep(5)\n            sign_up(self.driver, upercasename, email, \"12345\", \"12345\")\n            warning_msg = By_xpath(loginlocators.error_msg).text\n            print(warning_msg)\n            assert warning_msg == \"The password must be at least 8 characters.\"\n    \n            print(\"Test 07 ran successfully\")\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_logins.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_logins.TestBestInTownPizzaLogin testMethod=test_07_signup_insufficient_password_error>\n\n    @allure.description(\"To verify error messages when password less than minimum required value while signup/new account.\")\n    def test_07_signup_insufficient_password_error(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            firstname = names.get_first_name()\n            upercasename = firstname.upper()\n            email = \"{0}@gmail.com\".format(firstname)\n            password = \"{0}@1234\".format(firstname)\n            time.sleep(5)\n            sign_up(self.driver, upercasename, email, \"12345\", \"12345\")\n            warning_msg = By_xpath(loginlocators.error_msg).text\n            print(warning_msg)\n>           assert warning_msg == \"The password must be at least 8 characters.\"\nE           AssertionError: assert 'The email ha...y been taken.' == 'The password...8 characters.'\nE             - The password must be at least 8 characters.\nE             + The email has already been taken.\n\ntest_logins.py:160: AssertionError"}, "description": "To verify error messages when password less than minimum required value while signup/new account.", "steps": [{"name": "To fetch the website with url: 'http://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "2b82d432-d51d-469b-a264-d000164465fb-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"64805c5083468bccad0c66d1fbcb69ec\")>"}, {"name": "site_url", "value": "'http://bestintownpizzas.com/home'"}], "start": 1668493168056, "stop": 1668493179866}, {"name": "To create a new account", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "d47cca83-e7e2-4549-9c31-3a1eb3592624-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"64805c5083468bccad0c66d1fbcb69ec\")>"}, {"name": "firstname", "value": "'MARY'"}, {"name": "email", "value": "'Mary@gmail.com'"}, {"name": "password", "value": "'12345'"}, {"name": "confirmpassword", "value": "'12345'"}], "start": 1668493184869, "stop": 1668493203213}], "attachments": [{"name": "exception_screen", "source": "82d96317-0f9b-4e62-b74c-47ba48239fa4-attachment.png", "type": "image/png"}], "start": 1668493166706, "stop": 1668493205681, "uuid": "0eeb7bfb-f4f6-44ea-84fc-9cb5456295f0", "historyId": "5cc41be43df5bc341f62e33661490d68", "testCaseId": "fbd9cb431ee222d43b1c50a9fe40d8c3", "fullName": "test_logins.TestBestInTownPizzaLogin#test_07_signup_insufficient_password_error", "labels": [{"name": "suite", "value": "test_logins"}, {"name": "subSuite", "value": "TestBestInTownPizzaLogin"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "17232-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_logins"}]}