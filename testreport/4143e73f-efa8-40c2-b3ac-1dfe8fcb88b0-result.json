{"name": "test_04_add_new_delivery_address_at_checkout", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_profile_elements.TestBestInTownPizzaProfile testMethod=test_04_add_new_delivery_address_at_checkout>\n\n    @allure.description(\"To verify and add delivery address at checkout stage.\")\n    def test_04_add_new_delivery_address_at_checkout(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            new_address = random.choice(data[\"addresslist\"])\n            hno = ''.join([\"{}\".format(randint(0, 9)) for num in range(0, 2)])\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"sandwiches\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_combo_item(self.driver, \"Regular Crust\")\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            add_new_del_add(self.driver, new_address)\n            # place_ur_order_from_payment(self.driver)\n            time.sleep(2)\n            print(\"Test case 04 ran successfully\")\n            # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_profile_elements.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_profile_elements.py:109: in test_04_add_new_delivery_address_at_checkout\n    add_new_del_add(self.driver, new_address)\nmethods.py:678: in add_new_del_add\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>, address = '2301 Woodward Street, Philadelphia, PA, USA'\n\n    @allure.step(\"To add a new Delivery Address at checkout stage.\")\n    def add_new_del_add(driver, address):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            By_xpath(checkoutlocators.plus_add_address).click()\n            By_id(checkoutlocators.new_address_bar).send_keys(address)\n            time.sleep(1)\n            By_id(checkoutlocators.address_sugg).click()\n            By_id(checkoutlocators.save_this_address_btn).click()\n            allure.attach(driver.get_screenshot_as_png(),\n                          name='screen', attachment_type=AttachmentType.PNG)\n            time.sleep(7)\n            address_list = driver.find_elements_by_xpath(\n                checkoutlocators.address_list)\n            print(address)\n            for i in address_list:\n                print(i.text)\n>               assert address == i.text\nE               AssertionError\n\nmethods.py:676: AssertionError"}, "description": "To verify and add delivery address at checkout stage.", "steps": [{"name": "To fetch the website with url: 'https://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "f431acbe-da4b-49c6-9787-49547c2e79da-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}, {"name": "site_url", "value": "'https://bestintownpizzas.com/home'"}], "start": 1670924862742, "stop": 1670924871473}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "7f6483ac-da2a-4c2b-b675-79fb7153075f-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1670924873477, "stop": 1670924890808}, {"name": "To perform click operation on the element specified in list:'SANDWICHES HALAL MEDITERRANEAN SPECALTIES'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}, {"name": "productname", "value": "'SANDWICHES HALAL MEDITERRANEAN SPECALTIES'"}], "start": 1670924890809, "stop": 1670924890910}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "7a579088-0f3a-4425-983d-15792c3e97f7-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}, {"name": "productname", "value": "'Falafel Sandwich'"}], "start": 1670924893915, "stop": 1670924894427}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "7307a7f3-4712-4e20-ad37-e521bede0079-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}, {"name": "size", "value": "'Regular Crust'"}], "start": 1670924896442, "stop": 1670924907898}, {"name": "to add product to bag and verify cart details before checkout", "status": "passed", "attachments": [{"name": "cart_screen", "source": "ba7d390a-6df6-4b02-b6ee-cf23e962402b-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}], "start": 1670924907898, "stop": 1670924913935}, {"name": "Checkout to payment screen", "status": "passed", "attachments": [{"name": "screen", "source": "71f40988-9d18-4f30-92ae-7cca56323656-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}], "start": 1670924913936, "stop": 1670924920434}, {"name": "To add a new Delivery Address at checkout stage.", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 678, in add_new_del_add\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 676, in add_new_del_add\n    assert address == i.text\n"}, "attachments": [{"name": "screen", "source": "76993840-2cde-43c5-acd8-726a628bfbd4-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0c7d2aa932c5eaf9d6ea6014f9e72b1\")>"}, {"name": "address", "value": "'2301 Woodward Street, Philadelphia, PA, USA'"}], "start": 1670924920434, "stop": 1670924929479}], "attachments": [{"name": "exception_screen", "source": "3d5fc236-a928-4529-b341-02cacb278db6-attachment.png", "type": "image/png"}], "start": 1670924861225, "stop": 1670924931946, "uuid": "ed03bc60-f887-4307-ace8-41a8ab5c49f1", "historyId": "d4d38ca9dc3a0015dc5d0ddc680aae6e", "testCaseId": "3b546644ff5ef17f02b073548ba44af1", "fullName": "test_profile_elements.TestBestInTownPizzaProfile#test_04_add_new_delivery_address_at_checkout", "labels": [{"name": "suite", "value": "test_profile_elements"}, {"name": "subSuite", "value": "TestBestInTownPizzaProfile"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "22424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_profile_elements"}]}