{"name": "test_05_edit_delivery_address_at_checkout", "status": "broken", "statusDetails": {"message": "ValueError: could not convert string to float: ' $8.74'", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>\n\n    @ allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[1:]\n            print(dis_amount)\n            try:\n    \n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n>                   float(dis_amount) + float(tax2)\nE                   ValueError: could not convert string to float: ' $8.74'\n\nmethods.py:544: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>\n\n    @ allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[1:]\n            print(dis_amount)\n            try:\n    \n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n                    float(dis_amount) + float(tax2)\n                print(totalprice)\n            except:\n                print(\"no discount\")\n                try:\n                    totalprice = float(subtotal2) + \\\n>                       float(delivery_fee) + float(dis_amount)\nE                       ValueError: could not convert string to float: ' $8.74'\n\nmethods.py:550: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_profile_elements.TestBestInTownPizzaProfile testMethod=test_05_edit_delivery_address_at_checkout>\n\n    @allure.description(\"To verify and edit a delivery address at checkout stage.\")\n    def test_05_edit_delivery_address_at_checkout(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            new_address = random.choice(data[\"addresslist\"])\n            hno = ''.join([\"{}\".format(randint(0, 9)) for num in range(0, 2)])\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"sandwiches\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n                                   \"thin\", m[\"Fries\"], m[\"Additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            edit_del_add(self.driver, hno)\n            place_ur_order_from_payment(self.driver, \"Delivery\")\n            time.sleep(2)\n            print(\"Test case 05 ran successfully\")\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_profile_elements.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_profile_elements.py:154: in test_05_edit_delivery_address_at_checkout\n    add_to_bag_and_verify_cart_details(self.driver)\nmethods.py:578: in add_to_bag_and_verify_cart_details\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>\n\n    @ allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[1:]\n            print(dis_amount)\n            try:\n    \n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n                    float(dis_amount) + float(tax2)\n                print(totalprice)\n            except:\n                print(\"no discount\")\n                try:\n                    totalprice = float(subtotal2) + \\\n                        float(delivery_fee) + float(dis_amount)\n                except:\n>                   totalprice = float(subtotal2) + float(dis_amount)\nE                   ValueError: could not convert string to float: ' $8.74'\n\nmethods.py:552: ValueError"}, "description": "To verify and edit a delivery address at checkout stage.", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "61c32a6f-c6c8-4c9f-add0-9c0b243335d4-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677168531592, "stop": 1677168542757}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "bc72caff-3150-491b-921c-cf8add3516e4-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677168544768, "stop": 1677168555096}, {"name": "To perform click operation on the element specified in list:'SANDWICHES HALAL MEDITERRANEAN SPECALTIES'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>"}, {"name": "productname", "value": "'SANDWICHES HALAL MEDITERRANEAN SPECALTIES'"}], "start": 1677168555097, "stop": 1677168555198}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "f8bf43fa-5066-43f4-9707-4c775d2998ba-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>"}, {"name": "productname", "value": "'Falafel Sandwich'"}], "start": 1677168558211, "stop": 1677168558757}, {"name": "To be able to select pizza sides and quantity", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "e0cbdde3-fdb6-4749-800e-72ab7982726d-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>"}, {"name": "size", "value": "'large'"}, {"name": "crust", "value": "'thin'"}, {"name": "onions", "value": "'Add Fries'"}, {"name": "additional_Topping", "value": "'nothing'"}], "start": 1677168560771, "stop": 1677168577285}, {"name": "to add product to bag and verify cart details before checkout", "status": "broken", "statusDetails": {"message": "ValueError: could not convert string to float: ' $8.74'\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Documents\\GitHub\\bestintown\\methods.py\", line 578, in add_to_bag_and_verify_cart_details\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Documents\\GitHub\\bestintown\\methods.py\", line 552, in add_to_bag_and_verify_cart_details\n    totalprice = float(subtotal2) + float(dis_amount)\n"}, "attachments": [{"name": "Exception_screen", "source": "c892b4ee-eb6a-4a0e-ad15-c5c17c8af6d1-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"83465829085bfeee7680ff4becb6303b\")>"}], "start": 1677168577285, "stop": 1677168590228}], "attachments": [{"name": "exception_screen", "source": "4e9fc605-d6c3-418f-97df-e7505f721def-attachment.png", "type": "image/png"}], "start": 1677168530088, "stop": 1677168592690, "uuid": "53de309a-a1e3-4cdf-ac2b-a06c189310ea", "historyId": "fea8c0e8ef4be0e59a8ac7fc49e18d33", "testCaseId": "735ea0ed2d5afdbab27232a5c78c8d98", "fullName": "test_suite.TestBestInTownPizzaProfile#test_05_edit_delivery_address_at_checkout", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestBestInTownPizzaProfile"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "11028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}