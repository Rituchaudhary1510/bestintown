{"name": "test_06_edit_added_items", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_townpizza.TestMenu testMethod=test_06_edit_added_items>\n\n    @allure.description(\"To verify items can be edited\")\n    def test_06_edit_added_items(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"combo_item\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_combo_item(self.driver, \"Regular Crust\")\n                add_to_bag_and_verify_cart_details_combo(self.driver)\n                edit_items(self.driver)\n                add_to_bag_and_verify_cart_details_combo(self.driver)\n    \n            Checkout_to_paymentscreen(self.driver)\n            place_ur_order_from_payment(self.driver, \"Delivery\")\n            time.sleep(2)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_townpizza.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_townpizza.py:163: in test_06_edit_added_items\n    add_to_bag_and_verify_cart_details_combo(self.driver)\nmethods.py:652: in add_to_bag_and_verify_cart_details_combo\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>\n\n    @allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details_combo(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[3:]\n            print(dis_amount)\n            try:\n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n                    float(dis_amount) + float(tax2)\n                print(totalprice)\n            except:\n                print(\"no discount\")\n                try:\n                    totalprice = float(subtotal2) + \\\n                        float(delivery_fee) + float(dis_amount)\n                except:\n                    totalprice = float(subtotal2) + float(dis_amount)\n                print(totalprice)\n            format_float = \"{:.2f}\".format(totalprice)\n            try:\n                total = By_xpath(cartLocators.total).text\n                time.sleep(1)\n            except:\n                try:\n                    total = By_xpath(cartLocators.total1).text\n                    time.sleep(1)\n                except:\n                    total = By_xpath(cartLocators.total2).text\n                    time.sleep(1)\n            total2 = total[1:]\n            total3 = float(total2)\n            format_float2 = \"{:.2f}\".format(total3)\n            print(total3)\n>           assert format_float2 == format_float\nE           AssertionError\n\nmethods.py:643: AssertionError"}, "description": "To verify items can be edited", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "307d78b9-fb04-46c5-b376-4480e8bd9cb9-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677324305095, "stop": 1677324312018}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "63b70755-6588-4074-9dc1-3933dff1b531-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677324314018, "stop": 1677324322406}, {"name": "To perform click operation on the element specified in list:'Combo'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>"}, {"name": "productname", "value": "'Combo'"}], "start": 1677324322407, "stop": 1677324322531}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "9bd6ccc0-3060-415d-8e13-353d8295d522-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>"}, {"name": "productname", "value": "'Everyday Special #5'"}], "start": 1677324325544, "stop": 1677324326156}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "88b40eeb-093b-4c52-958a-68581a55a84f-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>"}, {"name": "size", "value": "'Regular Crust'"}], "start": 1677324328160, "stop": 1677324369495}, {"name": "to add product to bag and verify cart details before checkout", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Documents\\GitHub\\bestintown\\methods.py\", line 652, in add_to_bag_and_verify_cart_details_combo\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Documents\\GitHub\\bestintown\\methods.py\", line 643, in add_to_bag_and_verify_cart_details_combo\n    assert format_float2 == format_float\n"}, "attachments": [{"name": "Exception_screen", "source": "354078f1-339a-4960-8a91-3825d0376a53-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9f1fed1a47890b65212b111ac33d2d5\")>"}], "start": 1677324369495, "stop": 1677324378233}], "attachments": [{"name": "exception_screen", "source": "711c7c33-edb5-434e-a346-4bc89bb0529f-attachment.png", "type": "image/png"}], "start": 1677324303527, "stop": 1677324380657, "uuid": "c1b91a7b-0d61-457a-bfc2-33c782b32500", "historyId": "00c71e19f51168ace085adbe486d1ab4", "testCaseId": "5a9bf67975c5b643e28e0f3aa35f806e", "fullName": "test_suite.TestMenu#test_06_edit_added_items", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenu"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "16204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}