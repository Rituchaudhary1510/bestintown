{"name": "test_03_gourmet_pizza", "status": "broken", "statusDetails": {"message": "KeyError: 'onion'", "trace": "self = <test_menuitems.TestMenuItems testMethod=test_03_gourmet_pizza>\n\n    @allure.description(\"To verify that GOURMET PIZZA are able to add to cart\")\n    def test_03_gourmet_pizza(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"gourmet_pizza\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n                                   \"thin\", m[\"onion\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n                Checkout_to_paymentscreen(self.driver)\n                time.sleep(2)\n                time.sleep(3)\n                place_ur_order_from_payment(self.driver, \"Delivery\")\n                time.sleep(2)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_menuitems.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_menuitems.TestMenuItems testMethod=test_03_gourmet_pizza>\n\n    @allure.description(\"To verify that GOURMET PIZZA are able to add to cart\")\n    def test_03_gourmet_pizza(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"gourmet_pizza\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, \"large\",\n>                                  \"thin\", m[\"onion\"], m[\"additional_topping\"])\nE                                  KeyError: 'onion'\n\ntest_menuitems.py:105: KeyError"}, "description": "To verify that GOURMET PIZZA are able to add to cart", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "2d2b37e9-9f42-4cdd-a3ac-9fb987f80cb1-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37849bda8ac3eef9e133764e0aa58da9\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677415232575, "stop": 1677415239642}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "2580ec7b-7122-4a63-b6c2-327e2d8b44ae-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37849bda8ac3eef9e133764e0aa58da9\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677415241649, "stop": 1677415250567}, {"name": "To perform click operation on the element specified in list:'GOURMET PIZZA'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37849bda8ac3eef9e133764e0aa58da9\")>"}, {"name": "productname", "value": "'GOURMET PIZZA'"}], "start": 1677415250568, "stop": 1677415250679}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "1dacf900-e1f8-4b1f-b96b-f9f13998bdc3-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37849bda8ac3eef9e133764e0aa58da9\")>"}, {"name": "productname", "value": "'G4. Hawaiian Pizza'"}], "start": 1677415253682, "stop": 1677415254123}], "attachments": [{"name": "exception_screen", "source": "8c6c4825-9561-49d3-b22c-0c1a4f948008-attachment.png", "type": "image/png"}], "start": 1677415230976, "stop": 1677415258756, "uuid": "a4c812e1-3597-4e79-9566-c8f4d47d022e", "historyId": "1828ac0d2d86dadf099c74a3f397503f", "testCaseId": "fcac69f9a497d2f52ec87b434395038a", "fullName": "test_suite.TestMenuItems#test_03_gourmet_pizza", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenuItems"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "19244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}