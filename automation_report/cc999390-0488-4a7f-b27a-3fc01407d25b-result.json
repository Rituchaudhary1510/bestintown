{"name": "test_04_add_product_and_checkout_to_paymentscreen", "status": "broken", "statusDetails": {"message": "ValueError: could not convert string to float: ' $5.00'", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>\n\n    @ allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[1:]\n            print(dis_amount)\n            try:\n    \n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n>                   float(dis_amount) + float(tax2)\nE                   ValueError: could not convert string to float: ' $5.00'\n\nmethods.py:544: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>\n\n    @ allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[1:]\n            print(dis_amount)\n            try:\n    \n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n                    float(dis_amount) + float(tax2)\n                print(totalprice)\n            except:\n                print(\"no discount\")\n                try:\n                    totalprice = float(subtotal2) + \\\n>                       float(delivery_fee) + float(dis_amount)\nE                       ValueError: could not convert string to float: ' $5.00'\n\nmethods.py:550: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_townpizza.TestMenu testMethod=test_04_add_product_and_checkout_to_paymentscreen>\n\n    @allure.description(\"To verify add product and checkout to payment screen\")\n    def test_04_add_product_and_checkout_to_paymentscreen(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"seafood_platters\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_combo_item(self.driver, \"Regular Crust\")\n                add_to_bag_and_verify_cart_details(self.driver)\n                Checkout_to_paymentscreen(self.driver)\n                time.sleep(2)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_townpizza.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_townpizza.py:115: in test_04_add_product_and_checkout_to_paymentscreen\n    add_to_bag_and_verify_cart_details(self.driver)\nmethods.py:578: in add_to_bag_and_verify_cart_details\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>\n\n    @ allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                By_xpath(productlocators.add_to_bag_btn_price).click()\n            except:\n                By_xpath(productlocators.add_to_bag_btn2).click()\n            time.sleep(2)\n    \n            By_xpath(cartLocators.cart_bag).click()\n            time.sleep(5)\n    \n            item_price = By_xpath(cartLocators.product_price).text\n            print(\"product price:  \" + item_price)\n            item_price2 = item_price[1:]\n            print(item_price2)\n    \n            subtotal = By_xpath(cartLocators.cart_subtotal).text\n            subtotal2 = subtotal[1:]\n            print(subtotal2)\n    \n            dis = By_xpath(cartLocators.discount).text\n            dis_amount = dis[1:]\n            print(dis_amount)\n            try:\n    \n                fee = By_xpath(cartLocators.delivery_fee).text\n                delivery_fee = fee[1:]\n                print(delivery_fee)\n            except:\n                print(\"its a pickup order\")\n    \n            try:\n                tax = By_xpath(cartLocators.estimated_tax).text\n                tax2 = tax[1:]\n                print(tax2)\n                totalprice = float(subtotal2) + float(delivery_fee) + \\\n                    float(dis_amount) + float(tax2)\n                print(totalprice)\n            except:\n                print(\"no discount\")\n                try:\n                    totalprice = float(subtotal2) + \\\n                        float(delivery_fee) + float(dis_amount)\n                except:\n>                   totalprice = float(subtotal2) + float(dis_amount)\nE                   ValueError: could not convert string to float: ' $5.00'\n\nmethods.py:552: ValueError"}, "description": "To verify add product and checkout to payment screen", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "63ae7c10-74e8-49a1-9012-d9bf4d943b7e-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677248847567, "stop": 1677248858138}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "63bdc745-1e27-4afa-9d23-b8a00c655621-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677248860139, "stop": 1677248868787}, {"name": "To perform click operation on the element specified in list:'FRIED SEAFOOD PLATTERS'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>"}, {"name": "productname", "value": "'FRIED SEAFOOD PLATTERS'"}], "start": 1677248868788, "stop": 1677248868920}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "17430d99-830c-4782-839c-c6d9a50dc43e-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>"}, {"name": "productname", "value": "'Jumbo Fried Shrimp Platter'"}], "start": 1677248871932, "stop": 1677248872510}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "1c3eea88-08e5-41c3-8bb5-5a27da84752b-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>"}, {"name": "size", "value": "'Regular Crust'"}], "start": 1677248874518, "stop": 1677248902181}, {"name": "to add product to bag and verify cart details before checkout", "status": "broken", "statusDetails": {"message": "ValueError: could not convert string to float: ' $5.00'\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Documents\\GitHub\\bestintown\\methods.py\", line 578, in add_to_bag_and_verify_cart_details\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Documents\\GitHub\\bestintown\\methods.py\", line 552, in add_to_bag_and_verify_cart_details\n    totalprice = float(subtotal2) + float(dis_amount)\n"}, "attachments": [{"name": "Exception_screen", "source": "6bfd4d0c-91d8-4c7f-be34-e11aff252f59-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"38c684457e323f930c73f5d3638efa38\")>"}], "start": 1677248902181, "stop": 1677248914866}], "attachments": [{"name": "exception_screen", "source": "178d8578-73e5-4dc6-b995-c8d273429b48-attachment.png", "type": "image/png"}], "start": 1677248846106, "stop": 1677248917659, "uuid": "932cdc31-cb68-46c3-83b6-fc1ac58afc5a", "historyId": "a1ea00895b0f8ad577fefd05793abe62", "testCaseId": "0ddbbea59452582cfb57f5c0d3021933", "fullName": "test_suite.TestMenu#test_04_add_product_and_checkout_to_paymentscreen", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenu"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "20776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}