{"name": "test_07_add_new_card_details_at_checkout", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_profile_elements.TestBestInTownPizzaProfile testMethod=test_07_add_new_card_details_at_checkout>\n\n    @allure.description(\"To verify and add new card details at checkout stage.\")\n    def test_07_add_new_card_details_at_checkout(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            firstname = names.get_first_name()\n            upercasename = firstname.upper()\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"sandwiches\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_combo_item(self.driver, \"Regular Crust\")\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            add_new_card(self.driver, upercasename,\n                         \"4242424242424242\", \"12\", \"2024\", \"242\")\n            place_ur_order_from_payment(self.driver)\n            time.sleep(2)\n            print(\"Test case 07 ran successfully\")\n            # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_profile_elements.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_profile_elements.py:196: in test_07_add_new_card_details_at_checkout\n    \"4242424242424242\", \"12\", \"2024\", \"242\")\nmethods.py:742: in add_new_card\n    raise ex\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>, name = 'EDWARD', number = '4242424242424242', month = '12'\nyear = '2024', cvc = '242'\n\n    @allure.step(\"To add new card\")\n    def add_new_card(driver, name, number, month, year, cvc):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            By_xpath(checkoutlocators.plus_card_details).click()\n            time.sleep(2)\n            By_id(checkoutlocators.card_owner_name).send_keys(name)\n            By_xpath(checkoutlocators.new_card_number).send_keys(number)\n            Select(By_id(checkoutlocators.new_expiry_month)\n                   ).select_by_visible_text(month)\n            # Select(By_id(checkoutlocators.new_expiry_year)).select_by_visible_text(year)\n            By_id(checkoutlocators.new_cvc).send_keys(cvc)\n            By_xpath(checkoutlocators.save_card_btn).click()\n            time.sleep(2)\n            card_list = driver.find_elements_by_xpath(\n                checkoutlocators.card_list)\n            for i in card_list:\n                print(i.text)\n>               assert name in i.text\nE               AssertionError\n\nmethods.py:738: AssertionError"}, "description": "To verify and add new card details at checkout stage.", "steps": [{"name": "To fetch the website with url: 'https://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "486953e3-855e-4e0d-8f9b-a1a920db4eb9-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}, {"name": "site_url", "value": "'https://bestintownpizzas.com/home'"}], "start": 1670928077958, "stop": 1670928086373}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "ab953bd8-8854-4720-87aa-01cb58b38125-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1670928088389, "stop": 1670928105194}, {"name": "To perform click operation on the element specified in list:'SANDWICHES HALAL MEDITERRANEAN SPECALTIES'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}, {"name": "productname", "value": "'SANDWICHES HALAL MEDITERRANEAN SPECALTIES'"}], "start": 1670928105194, "stop": 1670928105281}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "d3e40121-eaf4-4035-bc62-30c130e82936-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}, {"name": "productname", "value": "'Falafel Sandwich'"}], "start": 1670928108286, "stop": 1670928108693}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "66f0d95a-66a1-455a-84d3-2bc526b48994-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}, {"name": "size", "value": "'Regular Crust'"}], "start": 1670928110707, "stop": 1670928122073}, {"name": "to add product to bag and verify cart details before checkout", "status": "passed", "attachments": [{"name": "cart_screen", "source": "7cfeba47-651e-4088-91b7-63ea1af190be-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}], "start": 1670928122073, "stop": 1670928127925}, {"name": "Checkout to payment screen", "status": "passed", "attachments": [{"name": "screen", "source": "f9b1ba56-2c64-4676-9de3-d1753d51ed2b-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}], "start": 1670928127925, "stop": 1670928134443}, {"name": "To add new card", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 742, in add_new_card\n    raise ex\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 738, in add_new_card\n    assert name in i.text\n"}, "attachments": [{"name": "card_screen_failure", "source": "7130042a-3287-47eb-af4c-3b26cfcc3dc0-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a33b58885e77603a3d2b922fe319a2a0\")>"}, {"name": "name", "value": "'EDWARD'"}, {"name": "number", "value": "'4242424242424242'"}, {"name": "month", "value": "'12'"}, {"name": "year", "value": "'2024'"}, {"name": "cvc", "value": "'242'"}], "start": 1670928134443, "stop": 1670928139368}], "attachments": [{"name": "exception_screen", "source": "2ce6b7ef-cd18-45ac-a845-40ab59381217-attachment.png", "type": "image/png"}], "start": 1670928076297, "stop": 1670928141939, "uuid": "66131bf1-cc6b-43a1-981c-43aa52554d70", "historyId": "53007aa32562efcac000c51a2b8857c2", "testCaseId": "1a69c83d65618088ed1b5ea308abffc7", "fullName": "test_profile_elements.TestBestInTownPizzaProfile#test_07_add_new_card_details_at_checkout", "labels": [{"name": "suite", "value": "test_profile_elements"}, {"name": "subSuite", "value": "TestBestInTownPizzaProfile"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "7800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_profile_elements"}]}