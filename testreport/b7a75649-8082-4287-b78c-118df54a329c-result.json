{"name": "test_03_Add_product_to_bag_verify_cart_details", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_townpizza.TestMenu testMethod=test_03_Add_product_to_bag_verify_cart_details>\n\n    @allure.description(\"To verify cart details\")\n    def test_03_Add_product_to_bag_verify_cart_details(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            for m in data[\"seafood_platters\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_combo_item(self.driver, \"Regular Crust\")\n                add_to_bag_and_verify_cart_details(self.driver)\n                # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_townpizza.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_townpizza.py:96: in test_03_Add_product_to_bag_verify_cart_details\n    add_to_bag_and_verify_cart_details(self.driver)\nmethods.py:549: in add_to_bag_and_verify_cart_details\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"776987759d1971462e48b45f560e516a\")>\n\n    @allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            try:\n                item1_price = By_id(productlocators.add_to_bag_btn_price).text\n                print(\"Price of 1st item is: \" + item1_price)\n                By_id(productlocators.add_to_bag_btn_price).click()\n            except:\n                item1_price = By_xpath(productlocators.edit_tobag_btn_price).text\n                print(item1_price)\n                By_xpath(productlocators.edit_update_btn).click()\n    \n            By_xpath(cartLocators.cart_bag).click()\n    \n            items_price2 = By_xpath(cartLocators.product_price).text\n            print(\"price is\" + items_price2)\n            items_price3 = items_price2[1:]\n            print(items_price3)\n>           assert items_price3 == item1_price\nE           AssertionError\n\nmethods.py:515: AssertionError"}, "description": "To verify cart details", "steps": [{"name": "To fetch the website with url: 'https://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "6e6553d1-7796-49c4-a0ed-a10005398c5b-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"776987759d1971462e48b45f560e516a\")>"}, {"name": "site_url", "value": "'https://bestintownpizzas.com/home'"}], "start": 1669357888583, "stop": 1669357897358}, {"name": "To perform click operation on the element specified in list:'FRIED SEAFOOD PLATTERS'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"776987759d1971462e48b45f560e516a\")>"}, {"name": "productname", "value": "'FRIED SEAFOOD PLATTERS'"}], "start": 1669357902367, "stop": 1669357902453}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "af3e6b4d-7c8e-4063-89da-d3b1749f1db1-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"776987759d1971462e48b45f560e516a\")>"}, {"name": "productname", "value": "'Jumbo Fried Shrimp Platter'"}], "start": 1669357905460, "stop": 1669357908986}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "1a0ca53e-ca41-43c0-b0a6-06d7bd115454-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"776987759d1971462e48b45f560e516a\")>"}, {"name": "size", "value": "'Regular Crust'"}], "start": 1669357910986, "stop": 1669357922917}, {"name": "to add product to bag and verify cart details before checkout", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 549, in add_to_bag_and_verify_cart_details\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 515, in add_to_bag_and_verify_cart_details\n    assert items_price3 == item1_price\n"}, "attachments": [{"name": "Exception_screen", "source": "6cf439b3-e172-4dee-b77f-5f68583b0151-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"776987759d1971462e48b45f560e516a\")>"}], "start": 1669357922918, "stop": 1669357924236}], "attachments": [{"name": "exception_screen", "source": "61e3c1d5-c9e4-4c94-9a5c-c0c8ded0b024-attachment.png", "type": "image/png"}], "start": 1669357886448, "stop": 1669357926798, "uuid": "91a4712b-7159-4e85-9fe3-7b99d8d02bfd", "historyId": "06679df3c18af813cec9d78e3a4c5715", "testCaseId": "33f0855c40201c0e85007be78bdc059f", "fullName": "test_townpizza.TestMenu#test_03_Add_product_to_bag_verify_cart_details", "labels": [{"name": "suite", "value": "test_townpizza"}, {"name": "subSuite", "value": "TestMenu"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "10176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_townpizza"}]}