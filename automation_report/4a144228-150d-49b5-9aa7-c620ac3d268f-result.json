{"name": "test_24_COLD_SANDWICHES", "status": "broken", "statusDetails": {"message": "KeyError: 'COLD_SANDWICHES'", "trace": "self = <test_menuitems.TestMenuItems testMethod=test_24_COLD_SANDWICHES>\n\n    @allure.description(\"To verify COLD SANDWICHES added successfully to cart.\")\n    def test_24_COLD_SANDWICHES(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            time.sleep(2)\n            for m in data[\"COLD_SANDWICHES\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(self.driver, m[\"size\"],\n                                   m[\"crust\"], m[\"platter\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            time.sleep(3)\n            place_ur_order_from_payment(self.driver, \"Delivery\")\n            order_number = verify_order_details(\n                self.driver, \"Delivery\", \"9:30am\")\n            print(order_number)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_menuitems.py:704: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_menuitems.TestMenuItems testMethod=test_24_COLD_SANDWICHES>\n\n    @allure.description(\"To verify COLD SANDWICHES added successfully to cart.\")\n    def test_24_COLD_SANDWICHES(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            time.sleep(2)\n>           for m in data[\"COLD_SANDWICHES\"]:\nE           KeyError: 'COLD_SANDWICHES'\n\ntest_menuitems.py:686: KeyError"}, "description": "To verify COLD SANDWICHES added successfully to cart.", "steps": [{"name": "To fetch the website with url: 'https://stage.bestintownpizza.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "c70a0118-f587-47e0-9e2b-f14fba6448b2-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff84e7825ee0b6a55ce76ef7012e008a\")>"}, {"name": "site_url", "value": "'https://stage.bestintownpizza.com/home'"}], "start": 1677830415315, "stop": 1677830421181}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "32b36739-8515-4370-855d-7fa3048a89f6-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff84e7825ee0b6a55ce76ef7012e008a\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1677830426187, "stop": 1677830434460}], "attachments": [{"name": "exception_screen", "source": "c59fc235-204a-4b58-8cd3-4f832366e101-attachment.png", "type": "image/png"}], "start": 1677830413778, "stop": 1677830441072, "uuid": "394c9ee8-4c54-42f7-b982-577a7c94bb69", "historyId": "c40d492454b89933f2608210276d60e5", "testCaseId": "8be9ac7e895bce5f2efedb6ded0919dd", "fullName": "test_suite.TestMenuItems#test_24_COLD_SANDWICHES", "labels": [{"name": "suite", "value": "test_suite"}, {"name": "subSuite", "value": "TestMenuItems"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "12988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suite"}]}