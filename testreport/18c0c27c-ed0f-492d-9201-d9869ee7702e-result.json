{"name": "test_06_edit_added_items", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_townpizza.TestMenu testMethod=test_06_edit_added_items>\n\n    @allure.description(\"To verify items can be edited\")\n    def test_06_edit_added_items(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"menulist_pizza2\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(\n                    self.driver, m[\"size\"], m[\"crust1\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n                edit_items(self.driver)\n                select_pizza_sides(\n                    self.driver, m[\"size1\"], m[\"crust\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n    \n            # # Checkout(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            # time.sleep(3)\n            place_ur_order_from_payment(self.driver)\n            # # sign_in2(self.driver, data[\"username\"], data[\"password\"])\n            time.sleep(2)\n            # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_townpizza.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_townpizza.py:171: in test_06_edit_added_items\n    add_to_bag_and_verify_cart_details(self.driver)\nmethods.py:526: in add_to_bag_and_verify_cart_details\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>\n\n    @allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        try:\n            try:\n                item_price1 = By_xpath(productlocators.add_tobag_btn_price).text\n                print(item_price1)\n                By_xpath(productlocators.add_to_bag).click()\n            except:\n                item_price1 = By_xpath(productlocators.edit_tobag_btn_price).text\n                print(item_price1)\n                By_xpath(productlocators.edit_update_btn).click()\n    \n            By_xpath(cartLocators.cart_bag).click()\n    \n            items_price2 = By_xpath(cartLocators.product_price).text\n            items_price3 = items_price2[1:]\n            print(items_price3)\n>           assert items_price3 == item_price1\nE           AssertionError\n\nmethods.py:492: AssertionError"}, "description": "To verify items can be edited", "steps": [{"name": "To fetch the website with url: 'http://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "72b829f5-ea38-4df9-8924-996a6ef5b437-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>"}, {"name": "site_url", "value": "'http://bestintownpizzas.com/home'"}], "start": 1667302204262, "stop": 1667302214304}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "94484d7f-403a-441d-9c74-37c7343d4a97-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1667302216316, "stop": 1667302234158}, {"name": "To perform click operation on the element specified in list:'Pizza'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>"}, {"name": "productname", "value": "'Pizza'"}], "start": 1667302234158, "stop": 1667302236226}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "b99e39eb-9b14-4cfd-b9a5-b4d0471ead67-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>"}, {"name": "productname", "value": "'Tomato Pie'"}], "start": 1667302239230, "stop": 1667302242624}, {"name": "To be able to select pizza sides and quantity", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "06656c31-a152-4e3b-ba2f-12f50874b133-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>"}, {"name": "size", "value": "'medium'"}, {"name": "crust", "value": "'thin'"}, {"name": "additional_Topping", "value": "'No topping'"}], "start": 1667302244630, "stop": 1667302248991}, {"name": "to add product to bag and verify cart details before checkout", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 526, in add_to_bag_and_verify_cart_details\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 492, in add_to_bag_and_verify_cart_details\n    assert items_price3 == item_price1\n"}, "attachments": [{"name": "Exception_screen", "source": "f8e57d03-4905-42b1-a3c0-3ad759695dd9-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f133d0f371a811dcc1e30fcaa5831901\")>"}], "start": 1667302248991, "stop": 1667302250110}], "attachments": [{"name": "exception_screen", "source": "3ac6c23f-774f-490a-9912-97d3752783a1-attachment.png", "type": "image/png"}], "start": 1667302200125, "stop": 1667302252612, "uuid": "c2209a81-884b-471e-a432-3202b71fe429", "historyId": "bb910fbcce70bf158851ab408bd1516e", "testCaseId": "c0efbb23c13470ed8dff01bcd5f73a31", "fullName": "test_townpizza.TestMenu#test_06_edit_added_items", "labels": [{"name": "suite", "value": "test_townpizza"}, {"name": "subSuite", "value": "TestMenu"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "8776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_townpizza"}]}