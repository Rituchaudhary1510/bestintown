{"name": "test_01_add_delivery_address", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_profile_elements.TestBestInTownPizzaProfile testMethod=test_01_add_delivery_address>\n\n    @allure.description(\"To add delivery address.\")\n    def test_01_add_delivery_address(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(5)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            new_address = random.choice(data[\"addresslist\"])\n            hno = ''.join([\"{}\".format(randint(0, 9)) for num in range(0, 2)])\n            add_delivery_address(self.driver, new_address)\n            print(\"Test 01  ran successfully\")\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_profile_elements.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_profile_elements.py:52: in test_01_add_delivery_address\n    add_delivery_address(self.driver, new_address)\nmethods.py:307: in add_delivery_address\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"63a50829bba7ee20fbc9ae762e1baab8\")>, hno = '71 North Franklin Stree, Philadelphia, PA 19152, USA'\n\n    @allure.step(\"To add delivery address\")\n    def add_delivery_address(driver, hno):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            time.sleep(2)\n            By_xpath(loginlocators.signedin_label).click()\n            time.sleep(3)\n            By_xpath(loginlocators.del_add_link).click()\n            time.sleep(4)\n            By_xpath(loginlocators.add_new_address_btn).click()\n            time.sleep(2)\n            By_id(loginlocators.new_add_field).send_keys(hno)\n            time.sleep(3)\n            By_xpath(loginlocators.address_list).click()\n            time.sleep(5)\n            success_msg = By_xpath(loginlocators.address_add_message).text\n            assert success_msg == \"Good news! Best In Town Pizzas can deliver to this address\"\n            By_xpath(loginlocators.update_add_btn).click()\n            time.sleep(5)\n            try:\n                warning_msg = By_xpath(loginlocators.warning_msg).text\n                assert warning_msg == \"The Address already exists.\"\n                By_xpath(loginlocators.ok_btn).click()\n                By_xpath(loginlocators.close_btn).click()\n            except:\n                print(\"new address has been added\")\n            allure.attach(driver.get_screenshot_as_png(\n            ), name='new_updated_address', attachment_type=AttachmentType.PNG)\n            time.sleep(2)\n            address_table = By_xpath(loginlocators.address_table).text\n            time.sleep(1)\n>           assert hno in address_table\nE           AssertionError\n\nmethods.py:305: AssertionError"}, "description": "To add delivery address.", "steps": [{"name": "To fetch the website with url: 'https://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "6a4dc784-162e-499e-92e1-6b43f969f693-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"63a50829bba7ee20fbc9ae762e1baab8\")>"}, {"name": "site_url", "value": "'https://bestintownpizzas.com/home'"}], "start": 1670848052489, "stop": 1670848061373}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "45b4d0db-4813-4602-8994-e8ed4a7e8d82-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"63a50829bba7ee20fbc9ae762e1baab8\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1670848066380, "stop": 1670848082671}, {"name": "To add delivery address", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 307, in add_delivery_address\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 305, in add_delivery_address\n    assert hno in address_table\n"}, "attachments": [{"name": "new_updated_address", "source": "dbd58b8c-34f9-445d-b545-06de153febba-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"63a50829bba7ee20fbc9ae762e1baab8\")>"}, {"name": "hno", "value": "'71 North Franklin Stree, Philadelphia, PA 19152, USA'"}], "start": 1670848082671, "stop": 1670848116619}], "attachments": [{"name": "exception_screen", "source": "c1ad07c6-6f69-43f3-af2f-8ba7c47fc753-attachment.png", "type": "image/png"}], "start": 1670848050486, "stop": 1670848119059, "uuid": "49b6cbdc-0fa0-46ec-af54-fe9a0fef1a5d", "historyId": "2cad862a06a9aec075c9de4f272860c5", "testCaseId": "210b26246c9b094820fea7b1cfdd0f92", "fullName": "test_profile_elements.TestBestInTownPizzaProfile#test_01_add_delivery_address", "labels": [{"name": "suite", "value": "test_profile_elements"}, {"name": "subSuite", "value": "TestBestInTownPizzaProfile"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "19336-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_profile_elements"}]}