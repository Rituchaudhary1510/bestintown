{"name": "test_06_edit_added_items", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_townpizza.TestMenu testMethod=test_06_edit_added_items>\n\n    @allure.description(\"To verify items can be edited\")\n    def test_06_edit_added_items(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"menulist_pizza2\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_pizza_sides(\n                    self.driver, m[\"size\"], m[\"crust1\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n                edit_items(self.driver)\n                select_pizza_sides(\n                    self.driver, m[\"size1\"], m[\"crust\"], m[\"additional_topping\"])\n                add_to_bag_and_verify_cart_details(self.driver)\n    \n            # # Checkout(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            # time.sleep(3)\n            place_ur_order_from_payment(self.driver)\n            # # sign_in2(self.driver, data[\"username\"], data[\"password\"])\n            time.sleep(2)\n            # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_townpizza.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_townpizza.py:171: in test_06_edit_added_items\n    add_to_bag_and_verify_cart_details(self.driver)\nmethods.py:526: in add_to_bag_and_verify_cart_details\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>\n\n    @allure.step(\"to add product to bag and verify cart details before checkout\")\n    def add_to_bag_and_verify_cart_details(driver):\n        By_xpath = driver.find_element_by_xpath\n        try:\n            try:\n                item_price1 = By_xpath(productlocators.add_tobag_btn_price).text\n                print(item_price1)\n                By_xpath(productlocators.add_to_bag).click()\n            except:\n                item_price1 = By_xpath(productlocators.edit_tobag_btn_price).text\n                print(item_price1)\n                By_xpath(productlocators.edit_update_btn).click()\n    \n            By_xpath(cartLocators.cart_bag).click()\n    \n            items_price2 = By_xpath(cartLocators.product_price).text\n            items_price3 = items_price2[1:]\n            print(items_price3)\n>           assert items_price3 == item_price1\nE           AssertionError\n\nmethods.py:492: AssertionError"}, "description": "To verify items can be edited", "steps": [{"name": "To fetch the website with url: 'http://bestintownpizzas.com/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "5548e06e-2785-4822-adf3-5d689701feb0-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>"}, {"name": "site_url", "value": "'http://bestintownpizzas.com/home'"}], "start": 1667302326129, "stop": 1667302335825}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "3c92e9ac-de2e-43ee-b971-c272056de812-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1667302337835, "stop": 1667302355172}, {"name": "To perform click operation on the element specified in list:'Pizza'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>"}, {"name": "productname", "value": "'Pizza'"}], "start": 1667302355173, "stop": 1667302357249}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "481d37eb-0d9b-41e0-bee7-01e9271e32da-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>"}, {"name": "productname", "value": "'Tomato Pie'"}], "start": 1667302360254, "stop": 1667302363739}, {"name": "To be able to select pizza sides and quantity", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "8e99d199-afe1-42bc-892f-3142fbbc83f7-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>"}, {"name": "size", "value": "'medium'"}, {"name": "crust", "value": "'thin'"}, {"name": "additional_Topping", "value": "'No topping'"}], "start": 1667302365740, "stop": 1667302370109}, {"name": "to add product to bag and verify cart details before checkout", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 526, in add_to_bag_and_verify_cart_details\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\bestintown\\methods.py\", line 492, in add_to_bag_and_verify_cart_details\n    assert items_price3 == item_price1\n"}, "attachments": [{"name": "Exception_screen", "source": "7c5c6a94-3087-4796-9d50-28c472bd7bf9-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0873b2ddc0b99daf489f8f870f42fa\")>"}], "start": 1667302370109, "stop": 1667302371239}], "attachments": [{"name": "exception_screen", "source": "e7fc3e28-8449-4b8d-8de6-65232fa590f0-attachment.png", "type": "image/png"}], "start": 1667302324616, "stop": 1667302373751, "uuid": "0f66fff9-e559-4853-ab1e-5a11138ce9f8", "historyId": "bb910fbcce70bf158851ab408bd1516e", "testCaseId": "c0efbb23c13470ed8dff01bcd5f73a31", "fullName": "test_townpizza.TestMenu#test_06_edit_added_items", "labels": [{"name": "suite", "value": "test_townpizza"}, {"name": "subSuite", "value": "TestMenu"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "17284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_townpizza"}]}